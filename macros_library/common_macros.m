# In this library, macros covered in seminars are described, so comments are not provided for them.

#---*------*------*------*------*------*------*------*------*---
.eqv read_only 0 
.eqv write_only 1 
.eqv write_append 9 

.macro open_file(%path, %flag)
	li a7 1024
	la a0 %path
	li a1 %flag
	ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro get_str(%buffer, %size)
	li a7 8
	la a0 %buffer
	li a1 %size
	ecall

	push(s0)
	push(s1)
	push(s2)

	li s0 '\n'
	la s1 %buffer
	loop:
		lb s2 (s1)
		beq s2 s0 replace
		addi s1 s1 1
		b loop
	
	replace:
		sb zero (s1)
		pop(s2)
		pop(s1)
		pop(s0)
	
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro push(%x)
	addi sp sp -4
	sw %x (sp)
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro pop(%x)
	lw %x, (sp)
	addi sp sp 4
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro print_text(%x)
	la a0 %x
	li a7 4
	ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro print_text_reg(%x)
	mv a0 %x
	li a7 4
	ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro print_int(%x)
	mv a0 %x
	li a7 1
	ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro new_line
	li a0 '\n'
	li a7 11
	ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro read(%file, %buffer, %size)
	li a7 63
	mv a0 %file
	mv a1 %buffer
	li a2 %size
	ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro allocate(%size)
	li a7 9
	li a0 %size
	ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro allocate_reg(%size)
	li a7 9
	mv a0 %size
	ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro close(%file_descriptor)
    li   a7 57
    mv   a0 %file_descriptor
    ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro write(%file_descriptor, %buffer, %size)
    li a7 64
    mv a0 %file_descriptor
    mv a1 %buffer
    mv a2 %size
    ecall
.end_macro
#---------------------------------------------------------------

#---*------*------*------*------*------*------*------*------*---
.macro input_char # Macro for inputting a character from the console
	li a7 12
	ecall
.end_macro
#--------------------------------------------------------------- 